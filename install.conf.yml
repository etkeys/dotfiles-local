- defaults:
    link:
        create: true
        force: true
        relink: true 
    shell:
        stderr: true
        stdout: true


- create: 
    - ~/bin/i3blocklets
    - ~/Desktop
    - ~/Documents
    - ~/Music
    - ~/Pictures
    - ~/Public
    - ~/Templates
    - ~/repos
    - ~/.themes
    - ~/Videos


- sudo:
    - shell:
        - description: Add Microsoft .NET Core package signing key
          command: >
              cd /tmp && 
              wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release --short --release)/packages-microsoft-prod.deb" &&
              dpkg -i packages-microsoft-prod.deb

        
        - description: Add repo for steam
          command: yes | add-apt-repository multiverse


        - description: Add ppa for Regolith Desktop
          command: yes | add-apt-repository ppa:regolith-linux/release


        - description: Perform apt cache update
          command: apt-get update


          # install-packages.py should have a link in /root/bin
        - description: Install packages
          command: install-packages.py --tags "any"

        
        - description: Update alternatives
          command: >
            declare -A alts &&
            alts[editor]="$(command -v vim.basic)" &&
            alts[x-terminal-emulator]="$(command -v urxvt)" &&
            (for key in "${!alts[@]"; do
              update-alternatives --set $key "${alts[$key]}"
            done)

        - description: Build and install i3blocks
          command: >
              REPO=$(git config --file=.gitmodules --get submodule.i3blocks.path) &&
              cd "$REPO" &&
              ./autogen.sh &&
              ./configure &&
              make &&
              make install
        
        - description: Build and install xgetres
          command: >
              REPO=$(git config --file=.gitmodules --get submodule.xgetres.path) &&
              cd "$REPO" &&
              make &&
              make install


        - description: Configure qemu-virgil
          command: >
              (command -v snap && snap list qemu-virgil) >/dev/null 2>&1 &&
              (
                  snap connect qemu-virgil:audio-record &&
                  snap connect qemu-virgil:kvm &&
                  snap connect qemu-virgil:raw-usb &&
                  snap connect qemu-virgil:removable-media
              ) ||
              echo "qemu-virgil not installed... skipping."


        - description: Add installing user to kvm group
          command: adduser ${SUDO_USER} kvm


        - description: Add ppa for yaru-mate
          command: >
              ((lsb_release -is | grep -q "^Ubuntu$") &&
              (lsb_release -rs | grep -q "^20.04$") &&
              (add-apt-repository ppa:flexiondotorg/yaru-mate) &&
              apt update &&
              apt upgrade -y ubuntu-mate-*)) ||
              echo "Could not add Yaru-mate repo"


        - description: Update lightdm background
          command: >
              FILE=/usr/share/glib-2.0/schemas/30_ubuntu-mate.gschema.override &&
              ( [ -f $FILE ] && [ ! -f ${FILE}.bak ] ) &&
              (
                  mkdir -p /usr/share/backgrounds &&
                  cp Pictures/Wallpapers/Reflections_by_Trenton_Fox.jpg /usr/share/backgrounds/ &&
                  cpb $FILE &&
                  sed -i -E "
                    s/^background=.+/background='\/usr\/share\/backgrounds\/Reflections_by_Trenton_Fox.jpg'/;
                    s/^draw-user-backgrounds=.+/draw-user-backgrounds=false/;
                 " $FILE &&
                 glib-compile-schemas "$(dirname $FILE)"
              ) ||
              echo "Could not find $FILE for lightdm update or already updated... skipping."


- link:
    ~/:
        path: home/.*
        glob: true
        exclude:
            - home/.gitignore
    ~/.config: ~ 
    ~/.Xresources: ~/.config/my-configs/xresources/current
    ~/Pictures/Wallpapers/current:
        path: ~/Pictures/Wallpapers/FoxMinimalist2.jpg 
        ignore-missing: true
    ~/toby:
        path: /nfs/home/$USER
        ignore-missing: true


- shell:
    - description: Build i3 config file
      command: config/i3/build-i3-config.sh


    - description: Install i3blocks blocklets
      command: >
          export BLOCKLETS_DEPLOY_DIR=~/bin/i3blocklets &&
          cd sublib/i3blocklets &&
          ./deploy


    # TODO What if there is more than just one theme file?
    # TODO Should these tar files be move to some object storage location and not git?
    - description: Install theme files
      stdout: false
      command: >
          cd ~ &&
          ls .dotfiles.local/themes/*.tar.gz | head -n 1 | xargs tar -vxf


    # TODO Like with theme files, I feel like these should be placed in object storage?
    - description: Copy wallpapers
      command: >
          mkdir -p ~/Pictures/Wallpapers &&
          cp Pictures/Wallpapers/*.jpg ~/Pictures/Wallpapers/

